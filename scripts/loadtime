#!/usr/bin/env python

# Time the time to load a semidbm db.
import sys
import optparse
import tempfile
import shutil
import time
import os

import semidbm


def time_load(opts):
    key = 'k' * opts.key_size_bytes
    value = 'b' * opts.value_size_bytes
    o = semidbm.open
    tmpdir = tempfile.mkdtemp(prefix='dbmprofile')
    path = os.path.join(tmpdir, 'mydb')
    db = o(path, 'c')
    print "Populating the DB...",
    sys.stdout.flush()
    for i in range(opts.num_keys):
        db[key] = value
    print "done"
    db.close()
    start = time.time()
    num_loads = 1000
    for  i in xrange(num_loads):
        db = o(path, 'c')
        db.close()
    end = time.time()
    shutil.rmtree(tmpdir)
    print "%.5f milliseconds average load time" % (
        ((end - start) / num_loads) * 1000)


def main():
    parser = optparse.OptionParser()
    parser.add_option('-n', '--num-keys', default=1000000, type=int)
    parser.add_option('-k', '--key-size-bytes', default=16, type=int)
    parser.add_option('-s', '--value-size-bytes', default=100, type=int)

    opts, args = parser.parse_args()
    time_load(opts)


if __name__ == '__main__':
    main()
